# vim: filetype=i3

#  _ _____                  __ _
# (_|___ /  ___ ___  _ __  / _(_) __ _
# | | |_ \ / __/ _ \| '_ \| |_| |/ _` |
# | |___) | (_| (_) | | | |  _| | (_| |
# |_|____/ \___\___/|_| |_|_| |_|\__, |
# i3 config file (v4)            |___/



# MAIN OPERATIONS AND SETTINGS

# Mod key = Win key
set $mod Mod4

# Start a terminal
bindsym $mod+Return exec urxvt
bindsym $mod+t exec urxvt

# Font
font pango:JetBrainsMono 10



# FUNCTION KEYS

# Audio
bindsym $mod+F1 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send -u low 'Mic muted'
bindsym $mod+F2 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && notify-send -u low 'Volume down'
bindsym $mod+F3 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && notify-send -u low 'Volume up'
bindsym $mod+F4 exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && notify-send -u low 'Audio muted'

# Brightness
bindsym $mod+F11 exec --no-startup-id "xbacklight -dec 5 && notify-send -u low 'Brightness down'
bindsym $mod+F12 exec --no-startup-id "xbacklight -inc 5 && notify-send -u low 'Brightness up'

# Media keys
bindsym $mod+F5 exec playerctl pause && notify-send -u low 'Pause'
bindsym $mod+F6 exec playerctl previous && notify-send -u low 'Previous'
bindsym $mod+F7 exec playerctl play && notify-send -u low 'Play'
bindsym $mod+F8 exec playerctl next && notify-send -u low 'Next'


# STARTUP

# Execute at startup
#exec_always --no-startup-id wal -R
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id network-manager-gnome
exec --no-startup-id nm-applet
exec_always --no-startup-id fcitx -d
exec --no-startup-id unclutter
exec_always --no-startup-id ~/.config/polybar/launch.sh
exec_always --no-startup-id setxkbmap -option caps:swapescape
exec --no-startup-id compton
exec --no-startup-id dunst


# WINDOW MANAGEMENT

# Kill focused window
bindsym $mod+q kill

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# Cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# Cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+v split h
# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child





# WORKSPACES

# Define workspaces
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move around workspaces
bindsym $mod+u workspace prev
bindsym $mod+i workspace next

# bound program to a directory
#assign [class="zoom"] 1
assign [class="firefox"] 2
for_window [instance="libreoffice"] move to workspace $ws3
assign [class="Zathura"] 3
#for_window [instance="jetbrains-pycharm-ce"] move to workspace $ws5
for_window [instance="spotify"] move to workspace $ws6
#assign [class="discord"] 7





# RESIZE WINDOWS

bindsym $mod+r mode "resize"

# Mouse can be used aswell
mode "resize" {
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}





# I3 SESSION MANAGEMENT

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


# KEYBINDINGS

#bindsym $mod+d exec rofi -show drun
bindsym $mod+d exec dmenu_run
# i3lock script
bindsym $mod+shift+x exec "$HOME/.local/bin/Scripts/lockscreen
# take screenshots
bindsym $mod+shift+p exec scrot -q 100 ~/Media/Pictures/Screenshots/%Y-%m-%d-%T-screenshot.jpg && notify-send "Screenshot taken ï€°"





# APPEARANCE

# change windows appearance
set_from_resource $bg i3wm.color0 #f0f0f0
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $c1 i3wm.color1 #f0f0f0
set_from_resource $c3 i3wm.color3 #f0f0f0
set_from_resource $c5 i3wm.color5 #f0f0f0

# class                 border  backgr. text    indicator       child_border
client.focused          $bg     $bg     $fg     $bg             $c1
client.focused_inactive $bg     $bg     $fg     $bg             $c5
client.unfocused        $bg     $bg     $fg     $bg             $c5
client.urgent           $bg     $bg     $fg     $bg             $c3
client.placeholder      $bg     $bg     $fg     $bg             $bg
client.background       $bg

hide_edge_borders both

# set random wallpaper
#exec_always wal -i ~/Media/Pictures/Wallpapers/Landscapes/
exec_always wal -i ~/Media/Pictures/Wallpapers/Cities/
#exec_always --no-startup-id wal -i ~/Media/Pictures/Wallpapers/Architecture/




### i3-gaps stuff ###

# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 2

# Set inner/outer gaps
gaps inner 8
gaps outer 8

# Gaps mode
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_horiz" {
       bindsym plus  gaps horizontal current plus 5
       bindsym minus gaps horizontal current minus 5
       bindsym 0     gaps horizontal current set 0
       bindsym Shift+plus gaps horizontal all plus 5
       bindsym Shift+minus gaps horizontal all minus 5
       bindsym Shift+0     gaps horizontal all set 0

       bindsym Return mode "$mode_gaps"
       bindsym Escape mode "default"
}

mode "$mode_gaps_verti" {
bindsym plus  gaps vertical current plus 5
bindsym minus gaps vertical current minus 5
bindsym 0     gaps vertical current set 0

bindsym Shift+plus  gaps vertical all plus 5
bindsym Shift+minus gaps vertical all minus 5
bindsym Shift+0     gaps vertical all set 0

bindsym Return mode "$mode_gaps"
bindsym Escape mode "default"
}

mode "$mode_gaps_top" {
bindsym plus  gaps top current plus 5
bindsym minus gaps top current minus 5
bindsym 0     gaps top current set 0

bindsym Shift+plus  gaps top all plus 5
bindsym Shift+minus gaps top all minus 5
bindsym Shift+0     gaps top all set 0

bindsym Return mode "$mode_gaps"
bindsym Escape mode "default"
}

mode "$mode_gaps_right" {
bindsym plus  gaps right current plus 5
bindsym minus gaps right current minus 5
bindsym 0     gaps right current set 0

bindsym Shift+plus  gaps right all plus 5
bindsym Shift+minus gaps right all minus 5
bindsym Shift+0     gaps right all set 0

bindsym Return mode "$mode_gaps"
bindsym Escape mode "default"
}

mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
bindsym minus gaps bottom current minus 5
bindsym 0     gaps bottom current set 0

bindsym Shift+plus  gaps bottom all plus 5
bindsym Shift+minus gaps bottom all minus 5
bindsym Shift+0     gaps bottom all set 0

bindsym Return mode "$mode_gaps"
bindsym Escape mode "default"
}

mode "$mode_gaps_left" {
bindsym plus  gaps left current plus 5
bindsym minus gaps left current minus 5
bindsym 0     gaps left current set 0

bindsym Shift+plus  gaps left all plus 5
bindsym Shift+minus gaps left all minus 5
bindsym Shift+0     gaps left all set 0

bindsym Return mode "$mode_gaps"
bindsym Escape mode "default"
}
